import unittest

import sys
sys.path.append("./code")

from plainCode.algoritmo_v_0_4 import AgenteMalware
from plainCode.grafo_v_0_4 import GrafoRed

# Tests unitarios del archivo algoritmo_v_0_4.py
#
# Author: Diego García Muñoz
# Tutores: Bruno Baruque Zanón y Roberto Carlos Casado Vara
# Trabajo Fin de Grado, Ingeniería Informática, Universidad de Burgos Curso 2022-2023
class test_algoritmo_v_0_4(unittest.TestCase):
    
    # Caso de prueba 1: búsqueda de ruta correcto
    #
    # Comprobamos que encuentra una ruta al nodo objetivo
    def test_encuentra_ruta(self): 
        #inicializamos un agente con una red simple y lo entrenamos
        NNODOS = 9
        meta = 5
        red = GrafoRed(NNODOS, meta)
        agente = AgenteMalware(red)
        gamma = 0.7
        alpha = 0.9
        agente.entrena_agente(alpha, gamma, 1000)

        #obtenemos la ruta desde el nodo 7
        inicio = 7
        ruta, puntuacion = agente.busca_ruta(inicio)

        #comprobamos que llega al destino a través de las conexiones existentes
        self.assertEqual(ruta[-1],meta+NNODOS, "Ha llegado al nodo objetivo")
        for i in range(len(ruta)-1):
            self.assertNotEqual(red.obtener_recompensa(ruta[i],ruta[i+1]), -111, "Ha tomado un camino no permitido")
    
if __name__ == '__main__':
    unittest.main()